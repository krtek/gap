{"name":"GAP","tagline":"Google App Engine bootstrap project","body":"### What is GAP?\r\nEver though how cool would be to use **virtualenv** and **pip** with your Python Google AppEngine project? \r\n\r\nWell, now you can!\r\n\r\n### Prerequisites\r\nAssuming that you're a Python developer and already use [PIP](https://pypi.python.org/pypi/pip) and [virtualenv](http://www.pythonforbeginners.com/basics/how-to-use-python-virtualenv/).\r\nDownload and install [Google App Engine SDK](https://developers.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python).\r\n\r\n### Usage\r\nBegin with creating **virtualenv** for your project. \r\n\r\n```\r\nmkvirtualenv gap-example\r\nworkon gap-example\r\n```\r\n\r\nThen install GAP and create your first project:\r\n\r\n```\r\npip install gap\r\ngap start-project gap-example\r\ncd gap-example\r\n```\r\n\r\nYour first GAP application is ready! Start it by running \r\n\r\n```\r\nbin/run\r\n```\r\n\r\nand navigate to: [http://localhost:8080/](http://localhost:8080/). Voil√†!\r\n\r\n### What now?\r\nNow you can start hacking (go to `src/`) as you would do in any other Python project. \r\nJust remember to use `bin/gip`, not `pip`!\r\n\r\n```\r\nbin/gip install <package>\r\n``` \r\n\r\nThis script uses `pip` to install dependencies and then symlinks it to working directory.\r\n\r\nYou can even create `requirements.gip` file to store all your dependencies and install it later by running: \r\n\r\n```\r\nbin/gip install -r requirements.gip\r\n```\r\n\r\n### Deployment\r\nReady to push to production? Then do it!\r\n\r\n```\r\nappcfg update src\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}